/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Sun May 28 00:02:23 2017. */

#ifndef PB_MBMESSAGE_PB_H_INCLUDED
#define PB_MBMESSAGE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Result {
    Result_OK = 0,
    Result_Error = 1
} Result;
#define _Result_MIN Result_OK
#define _Result_MAX Result_Error
#define _Result_ARRAYSIZE ((Result)(Result_Error+1))

/* Struct definitions */
typedef struct _ChangeParams {
    float temperature;
    float humidity;
    uint32_t fan_speed;
/* @@protoc_insertion_point(struct:ChangeParams) */
} ChangeParams;

typedef struct _ChangeSpeed {
    uint32_t fan_speed;
/* @@protoc_insertion_point(struct:ChangeSpeed) */
} ChangeSpeed;

typedef struct _ExecResult {
    Result result;
/* @@protoc_insertion_point(struct:ExecResult) */
} ExecResult;

typedef struct _Commands {
    pb_size_t which_cmd;
    union {
        ChangeSpeed change_speed;
    } cmd;
/* @@protoc_insertion_point(struct:Commands) */
} Commands;

typedef struct _Notifications {
    pb_size_t which_notif;
    union {
        ChangeParams change_parameters;
    } notif;
/* @@protoc_insertion_point(struct:Notifications) */
} Notifications;

typedef struct _Responses {
    uint32_t on_command;
    pb_size_t which_resp;
    union {
        ExecResult exec_result;
    } resp;
/* @@protoc_insertion_point(struct:Responses) */
} Responses;

typedef struct _MBMessage {
    pb_size_t which_interface;
    union {
        Commands commands;
        Responses responses;
        Notifications notifications;
    } interface;
/* @@protoc_insertion_point(struct:MBMessage) */
} MBMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define ChangeSpeed_init_default                 {0}
#define ChangeParams_init_default                {0, 0, 0}
#define Commands_init_default                    {0, {ChangeSpeed_init_default}}
#define ExecResult_init_default                  {(Result)0}
#define Responses_init_default                   {0, 0, {ExecResult_init_default}}
#define Notifications_init_default               {0, {ChangeParams_init_default}}
#define MBMessage_init_default                   {0, {Commands_init_default}}
#define ChangeSpeed_init_zero                    {0}
#define ChangeParams_init_zero                   {0, 0, 0}
#define Commands_init_zero                       {0, {ChangeSpeed_init_zero}}
#define ExecResult_init_zero                     {(Result)0}
#define Responses_init_zero                      {0, 0, {ExecResult_init_zero}}
#define Notifications_init_zero                  {0, {ChangeParams_init_zero}}
#define MBMessage_init_zero                      {0, {Commands_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define ChangeParams_temperature_tag             1
#define ChangeParams_humidity_tag                2
#define ChangeParams_fan_speed_tag               3
#define ChangeSpeed_fan_speed_tag                1
#define ExecResult_result_tag                    1
#define Commands_change_speed_tag                1
#define Notifications_change_parameters_tag      1
#define Responses_exec_result_tag                2
#define Responses_on_command_tag                 1
#define MBMessage_commands_tag                   1
#define MBMessage_responses_tag                  2
#define MBMessage_notifications_tag              3

/* Struct field encoding specification for nanopb */
extern const pb_field_t ChangeSpeed_fields[2];
extern const pb_field_t ChangeParams_fields[4];
extern const pb_field_t Commands_fields[2];
extern const pb_field_t ExecResult_fields[2];
extern const pb_field_t Responses_fields[3];
extern const pb_field_t Notifications_fields[2];
extern const pb_field_t MBMessage_fields[4];

/* Maximum encoded size of messages (where known) */
#define ChangeSpeed_size                         6
#define ChangeParams_size                        16
#define Commands_size                            8
#define ExecResult_size                          2
#define Responses_size                           10
#define Notifications_size                       18
#define MBMessage_size                           20

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MBMESSAGE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
